@{ ViewData["Title"] = "Index"; } 
@model IEnumerable<ShopifyOrder>

    <div class="container">
        <div class="row align-items-center mt-3">
            <div class="col-md-10">
                <h3>Your orders for @ViewData["dateStart"] - @ViewData["dateEnd"]</h3>
            </div>
            <div class="col-md-2">
                <button class="btn btn-primary float-right">Get All Tracking Codes</button>
            </div>
        </div>

        <form id="filterOrdersForm" asp-controller="Orders" asp-action="FilterOrders" method="post">
        <div class="row align-items-center mt-3">
            <div class="col-md-6">
                <div class="input-group">
                    <input id="filter" name="filter" type="text" class="form-control" placeholder="Filter..."> 
                    <div class="input-group-append">
                        <button class="btn btn-info" type="submit">Filter</button>
                    </div>                                  
                </div>
            </div>
            <div class="col-md-2">
                <div class="input-group date">
                    <input name="dateStart" type="text" class="date-from form-control py-2 border-right-0 border" value="@ViewData["dateStart"]">
                    <div class="input-group-append input-group-addon">
                        <span class="input-group-text bg-transparent"><i class="far fa-calendar-alt"></i></span>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="input-group date">
                    <input name="dateEnd" type="text" class="date-to form-control py-2 border-right-0 border" value="@ViewData["dateEnd"]">
                    <div class="input-group-append input-group-addon">
                        <span class="input-group-text bg-transparent"><i class="far fa-calendar-alt"></i></span>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle float-right" type="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Select Date Range
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                        <button class="dropdown-item" type="button" value="today">Today</button>
                        <button class="dropdown-item" type="button" value="yesterday">Yesterday</button>
                        <button class="dropdown-item" type="button" value="last_7">Last 7 days</button>
                        <button class="dropdown-item" type="button" value="last_14">Last 14 days</button>
                        <button class="dropdown-item" type="button" value="last_30">Last 30 days</button>
                        <button class="dropdown-item" type="button" value="last_90">Last 90 days</button>
                        <button class="dropdown-item" type="button" value="week_to_date">Week to date</button>
                        <button class="dropdown-item" type="button" value="month_to_date">Month to date</button>
                        <button class="dropdown-item" type="button" value="quarter_to_date">Quarter to date</button>
                        <button class="dropdown-item" type="button" value="year_to_date">Year to date</button>
                    </div>
                </div>
            </div>
        </div>
        </form>

        @foreach(ShopifyOrder order in Model) {
        <div class="row align-items-center mt-3">
            <div class="col-md-1">
                <a class="btn btn-default" target="_blank" href="https://wazalo.myshopify.com/admin/orders/@order.Id"><strong>@order.Name</strong></a>
            </div>
            <div class="col-md-2">
                @order.CreatedAt.ToString("dd/MM/yyyy HH:mm")
            </div>
            <div class="col-md-3">
                Customer: <span class="text-info">@order.CustomerName</span>
            </div>
            <div class="col-md-6">
                <a class="btn btn-warning float-right" target="_blank" href="">Order Product</a>
            </div>
        </div>
        <div class="row align-items-center">
            <div class="col-md-2">
                Financial: @if (order.FinancialStatus.Equals("paid")) {
                <span class="text-success">@order.FinancialStatus</span> } else {
                <span class="text-warning">@order.FinancialStatus</span> }
            </div>
            <div class="col-md-3">
                Fulfillment: @if (order.FulfillmentStatus.Equals("fulfilled")) {
                <span class="text-success">@order.FulfillmentStatus</span> } else {
                <span class="text-warning">@order.FulfillmentStatus</span> }
            </div>
            <div class="col-md-2">
                Supplier:
            </div>
            <div class="col-md-2">
                Shipped: 0 / 0
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @foreach(ShopifyOrderLineItem lineItem in order.LineItems) {
                <div class="row align-items-center bg-light text-dark border">
                    <div class="col-md-2">@{ if (lineItem.ProductImages != null) { ShopifyProductImage productImage = lineItem.ProductImages.First();
                        <img width="80" class="img" src="@productImage.Src" alt="@productImage.Alt"> } }
                    </div>
                    <div class="col-md-3"><span class="text-info">@lineItem.Title</span><br><small>@lineItem.Sku</small></div>
                    <div class="col-md-2">@lineItem.VariantTitle</div>
                    <div class="col-md-2">
                        @if (order.Fulfillments != null) { @foreach(ShopifyOrderFulfillment fulfillment in order.Fulfillments) {
                        <a target="_blank" href="@fulfillment.TrackingUrl">@fulfillment.TrackingNumber</a> } }
                    </div>
                    <div class="col-md-1">
                        <div class="float-right">@lineItem.Quantity</div>
                    </div>
                    <div class="col-md-1"><span class="text-muted float-right"><small>x</small></span></div>
                    <div class="col-md-1">
                        <div class="float-right">@lineItem.Price</div>
                    </div>
                </div>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="float-right"><small>Total Cost: </small>@order.TotalPrice</div>
            </div>
        </div>
        }
    </div>

@section Scripts {
    @* Check also
    // https://github.com/MauriceZ/lannister/blob/9dfa9c19e6ecd120db240be6ccb419a0212169ec/app/assets/javascripts/dashboard.js
    // https://github.com/MauriceZ/lannister/blob/5befba458a14904599feb5d456619651791f02ce/app/views/dashboard/index.html.erb
    *@
    <script type="text/javascript">
        $(function() { // will trigger when the document is ready
            var $dateFromPicker = $('.date-from');
            var $dateToPicker = $('.date-to');      
            var $dateDropdown = $('.dropdownYX'); 
            
            var sevenDaysAgo = new Date(new Date().getTime() - daysToMillis(7));

            $dateFromPicker.datepicker({
                format: "yyyy-mm-dd",
                language: "no",
                autoclose: true
            })
            .on('changeDate', function(e) {
                $('#filterOrdersForm').submit();
            });

            $dateToPicker.datepicker({
                format: "yyyy-mm-dd",
                language: "no",
                autoclose: true,
                todayBtn: true
            })
            .on('changeDate', function(e) {
                $('#filterOrdersForm').submit();
            });

            $(".dropdown-item").click(function(e){
                //e.preventDefault(); // cancel the link behaviour

                var dateRange = $(this).val();
                var today = new Date();
                var dateFrom = new Date();
                var dateTo = new Date();

                switch (dateRange) {
                case 'today':
                    break;
                case 'yesterday':
                    dateFrom = new Date(today.getTime() - daysToMillis(1));
                    dateTo = dateFrom;
                    break;
                case 'last_7':
                    dateFrom = new Date(today.getTime() - daysToMillis(7));
                    break;
                case 'last_14':
                    dateFrom = new Date(today.getTime() - daysToMillis(14));
                    break;
                case 'last_30':
                    dateFrom = new Date(today.getTime() - daysToMillis(30));
                    break;
                case 'last_90':
                    dateFrom = new Date(today.getTime() - daysToMillis(90));
                    break;
                case 'week_to_date':
                    dateFrom = new Date(today.getTime() - daysToMillis(today.getDay()));
                    break;
                case 'month_to_date':
                    dateFrom.setDate(1);
                    break;
                case 'quarter_to_date':
                    dateFrom.setMonth((Math.floor((today.getMonth() + 3) / 3) - 1) * 3);
                    dateFrom.setDate(1);
                    break;
                case 'year_to_date':
                    dateFrom.setMonth(0);
                    dateFrom.setDate(1);
                    break;
                default:
                    return;
                    break;
                }     

                $dateFromPicker.datepicker('setDate', dateFrom);
                $dateToPicker.datepicker('setDate', dateTo);                
            });      

        });

        function daysToMillis(numDays) {
            return numDays * 86400000; // 86400000 ms in a day
        }
    </script>
}