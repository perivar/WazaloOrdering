@model OrdersViewModel
@{ ViewData["Title"] = "Orders"; }

    <div class="container">
        <div class="row align-items-center mt-3">
            <div class="col-md-10">
                <h3>Your orders for @Html.DisplayFor(x => x.DateStart) - @Html.DisplayFor(x => x.DateEnd)</h3>
            </div>
            <div class="col-md-2">
                <button class="btn btn-primary float-right">Get All Tracking Codes</button>
            </div>
        </div>

        <form asp-controller="Orders" asp-action="" method="post">
            <div class="row align-items-center mt-2">
                <div class="col-md-3">
                    <div class="input-group">
                        <select asp-for="StatusIds" asp-items="Model.StatusList"></select>
                    </div>
                </div>                
                <div class="col-md-3">
                    <div class="input-group">
                        <input name="Filter" type="text" class="form-control" placeholder="Filter..." value="@Model.Filter">
                        <div class="input-group-append">
                            <button class="btn btn-info" type="submit">Filter</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="input-group date py-2">
                        <input name="DateStart" type="text" class="date-from form-control" value="@Html.DisplayFor(x => x.DateStart)">
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="input-group date py-2">
                        <input name="DateEnd" type="text" class="date-to form-control" value="@Html.DisplayFor(x => x.DateEnd)">
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle float-right" type="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Select Date Range
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                            <button class="dropdown-item" type="button" value="today">Today</button>
                            <button class="dropdown-item" type="button" value="yesterday">Yesterday</button>
                            <button class="dropdown-item" type="button" value="last_7">Last 7 days</button>
                            <button class="dropdown-item" type="button" value="last_14">Last 14 days</button>
                            <button class="dropdown-item" type="button" value="last_30">Last 30 days</button>
                            <button class="dropdown-item" type="button" value="last_90">Last 90 days</button>
                            <button class="dropdown-item" type="button" value="week_to_date">Week to date</button>
                            <button class="dropdown-item" type="button" value="month_to_date">Month to date</button>
                            <button class="dropdown-item" type="button" value="quarter_to_date">Quarter to date</button>
                            <button class="dropdown-item" type="button" value="year_to_date">Year to date</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>

        @foreach(ShopifyOrder order in Model.ShopifyOrders) { @await Html.PartialAsync( "OrderPartial", order, new ViewDataDictionary(this.ViewData) { { "orderPage", false } } ) }
    </div>

    @section Scripts { 
        @* 
        Check also // https://github.com/MauriceZ/lannister/blob/9dfa9c19e6ecd120db240be6ccb419a0212169ec/app/assets/javascripts/dashboard.js // https://github.com/MauriceZ/lannister/blob/5befba458a14904599feb5d456619651791f02ce/app/views/dashboard/index.html.erb
        *@
    <script type="text/javascript">
        $(function() { // will trigger when the document is ready
            var $dateFromPicker = $('.date-from');
            var $dateToPicker = $('.date-to');

            var sevenDaysAgo = new Date(new Date().getTime() - daysToMillis(7));

            $('#StatusIds').multiselect({
                templates: {
                    li: '<li><a href="javascript:void(0);"><label class="text-secondary pl-2"></label></a></li>'
                }
            });
 
            $dateFromPicker.datepicker({
                    uiLibrary: 'bootstrap4',
                    iconsLibrary: 'fontawesome',
                    format: "yyyy-mm-dd",
                    locale: "en-us",
                    weekStartDay: 1
                })
                .on('close', function(e) {
                    window.location.href = "@Url.Action("", "Orders")" +
                        "?DateStart=" + $dateFromPicker.val() +
                        "&DateEnd=" + $dateToPicker.val();
                });

            $dateToPicker.datepicker({
                    uiLibrary: 'bootstrap4',
                    iconsLibrary: 'fontawesome',
                    format: "yyyy-mm-dd",
                    locale: "en-us",
                    weekStartDay: 1
                })
                .on('close', function(e) {
                    window.location.href = "@Url.Action("", "Orders")" +
                        "?DateStart=" + $dateFromPicker.val() +
                        "&DateEnd=" + $dateToPicker.val();
                });

            $(".dropdown-item").click(function(e) {
                var dateRange = $(this).val();
                var today = new Date();
                var dateFrom = new Date();
                var dateTo = new Date();

                switch (dateRange) {
                    case 'today':
                        break;
                    case 'yesterday':
                        dateFrom = new Date(today.getTime() - daysToMillis(1));
                        dateTo = dateFrom;
                        break;
                    case 'last_7':
                        dateFrom = new Date(today.getTime() - daysToMillis(7));
                        break;
                    case 'last_14':
                        dateFrom = new Date(today.getTime() - daysToMillis(14));
                        break;
                    case 'last_30':
                        dateFrom = new Date(today.getTime() - daysToMillis(30));
                        break;
                    case 'last_90':
                        dateFrom = new Date(today.getTime() - daysToMillis(90));
                        break;
                    case 'week_to_date':
                        dateFrom = new Date(today.getTime() - daysToMillis(today.getDay()));
                        break;
                    case 'month_to_date':
                        dateFrom.setDate(1);
                        break;
                    case 'quarter_to_date':
                        dateFrom.setMonth((Math.floor((today.getMonth() + 3) / 3) - 1) * 3);
                        dateFrom.setDate(1);
                        break;
                    case 'year_to_date':
                        dateFrom.setMonth(0);
                        dateFrom.setDate(1);
                        break;
                    default:
                        return;
                        break;
                }

                $dateFromPicker.datepicker('value', dateFrom);
                $dateToPicker.datepicker('value', dateTo);
                $dateFromPicker.close();
            });

        });

        function daysToMillis(numDays) {
            return numDays * 86400000; // 86400000 ms in a day
        }
    </script>
    }