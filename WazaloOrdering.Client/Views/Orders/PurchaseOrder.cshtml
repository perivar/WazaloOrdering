@model PurchaseOrderViewModel 
@{ 
    ViewData["Title"] = "Purchase Order"; 
}

<h2>Purchase Order to Aiminyz</h2>
            
<div class="container">
    <div class="row justify-content-start mt-3">
        <div class="col-md-6">
            <h3>Step 1. Pay using Paypal</h3>
        </div>
        <div class="col-md-2">
            <a class="btn btn-primary" href="https://www.paypal.com/myaccount/transfer/homepage/send" role="button" target="_blank">Pay on Paypal</a>
        </div>        
    </div>
    <div class="row justify-content-start mt-3">
        <div class="col-md-8">
            Use <mark>Send Money</mark> for <mark>Goods and Services</mark> to <code>master@aiminyz.com</code>
        </div>
    </div>
    <div class="row justify-content-start mt-3">
        <div class="col-md-8">
            With a note:<br> 
            <div role="wrapper" class="input-group mb-3">
                <input readonly class="form-control border-right-0 border" type="text" id="textToCopy" value="Purchase Order: @Model.OrderName">
                <div class="input-group-append" role="right-icon">
                    <button class="btn btn-outline-secondary border-left-0 border" type="button" data-clipboard-target="#textToCopy">
                        <i class="fas fa-clipboard"></i>
                    </button>      
                </div>                
            </div>
        </div>        
    </div>
    <div class="row justify-content-start mt-3">
        <div class="col-md-12">
            <h3>Step 2. Check and optionally edit the line items</h3>
        </div>
    </div>
</div>  
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <table id="grid" class="table table-bordered table-hover table-sm"></table>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="alert alert-primary" role="alert">
                <strong>Total Cost (USD): @Model.TotalCost</strong>
            </div>            
        </div>
    </div>
</div>

<form method="post">
    <div class="container">
        <div class="row justify-content-start mt-4">
            <div class="col-md-12">
                <div class="collapsed" data-toggle="collapse" href="#collapseMail" aria-expanded="false" aria-controls="collapseMail">
                    <h3>Step 3. Change the email (Optional) <i class="fas fa-chevron-up" aria-hidden="true"></i></h3>                    
                </div>
            </div>
        </div>
        <div id="collapseMail" class="row justify-content-start collapse">
            <div class="col-12">
                <div class="form-group">
                    <input asp-for="OrderId" type="hidden">
                    <input asp-for="OrderName" type="hidden">
                    <label asp-for="EmailTo"></label>
                    <input asp-for="EmailTo" type="email" class="form-control form-control-sm" placeholder="mail@example.com">
                    <label asp-for="EmailCC"></label>
                    <input asp-for="EmailCC" type="email" class="form-control form-control-sm" placeholder="mail@example.com">
                </div>
                <div class="form-group">
                    <label asp-for="EmailBody">Email Body:</label>
                    <textarea asp-for="EmailBody" class="form-control" rows="12"></textarea>
                </div>
            </div>
        </div>
        <div class="row justify-content-start mt-4">
            <div class="col-md-6">
                <h3>Step 4. Send the email</h3>
            </div>
            <div class="col-md-6">
                <button asp-controller="Orders" asp-action="MailPurchaseOrder" class="btn btn-primary">Mail Purchase Order</button>
            </div>
        </div>
        <div class="row justify-content-start mt-4">
            <div class="col-md-6">
                <strong>(Optional)</strong> Export the purhase order line items and send email manually
            </div>
            <div class="col-md-6">
                <button asp-controller="Orders" asp-action="ExportPurchaseOrder" class="btn btn-warning btn-sm">Export Purchase Order</button>
            </div>
        </div>
    </div>
</form>
                
@section Scripts {
<script type="text/javascript">
    $(document).ready(function() {
        var grid, editManager;

        editManager = function(value, record, $cell, $displayEl, id, $grid) {
            var data = $grid.data(),
                $edit = $('<button class="btn btn-outline-secondary btn-sm border-0"><i class="fas fa-pencil-alt"></i></button>').attr('data-key', id),
                $delete = $('<button class="btn btn-outline-secondary btn-sm border-0"><i class="fas fa-trash-alt"></i></button>').attr('data-key', id),
                $update = $('<button class="btn btn-success btn-sm"><i class="fas fa-check"></i></button>').attr('data-key', id).hide(),
                $cancel = $('<button class="btn btn-danger btn-sm"><i class="fas fa-times"></i></button>').attr('data-key', id).hide();

            $edit.on('click', function(e) {
                $grid.edit($(this).data('key'));
                $edit.hide();
                $delete.hide();
                $update.show();
                $cancel.show();
            });

            $delete.on('click', function(e) {
                $grid.removeRow($(this).data('key'));
            });

            $update.on('click', function(e) {
                $grid.update($(this).data('key'));
                $edit.show();
                $delete.show();
                $update.hide();
                $cancel.hide();
            });

            $cancel.on('click', function(e) {
                $grid.cancel($(this).data('key'));
                $edit.show();
                $delete.show();
                $update.hide();
                $cancel.hide();
            });

            $displayEl.empty().append($edit).append($delete).append($update).append($cancel);
        }

        grid = $('#grid').grid({
            dataSource: '/Orders/Get/@Model.OrderId',
            primaryKey: 'id',
            uiLibrary: 'bootstrap4',
            fontSize: '14px',
            inlineEditing: { mode: 'command', managementColumn: false },
            detailTemplate: '<div></div>',
            responsive: true,
            resizableColumns: true,
            showHiddenColumnsAsDetails: true,
            columns: [
                { field: 'id', hidden: true, priority: 100 },
                { field: 'orderID', title: 'Order ID', sortable: true, minWidth: 80, priority: 4 },
                { field: 'sku', title: 'SKU', sortable: true, editor: true, minWidth: 80, priority: 1 },
                { field: 'quantity', title: 'Quantity', editor: true, minWidth: 80, priority: 2 },
                { field: 'priceUSD', title: 'Price USD', editor: true, minWidth: 80, priority: 3 },
                { field: 'name', title: 'Name', sortable: true, editor: true, minWidth: 80, priority: 5},
                { field: 'address1', title: 'Address 1', editor: true, minWidth: 80, priority: 6 },
                { field: 'zipCode', title: 'Zip Code', editor: true, minWidth: 80, priority: 8 },
                { field: 'city', title: 'City', editor: true, minWidth: 80, priority: 7 },
                { field: 'country', title: 'Country', editor: true, minWidth: 80, priority: 70 },
                { width: 100, align: 'center', renderer: editManager }
            ],
            pager: {
                limit: 5
            }
        });
        grid.on('rowDataChanged', function (e, id, record) {
            $.ajax({ url: '/Orders/Save/@Model.OrderId', data: { record: record }, method: 'POST' })
                .fail(function () {
                    alert('Failed to save.');
                });
        });
        grid.on('rowRemoving', function (e, $row, id, record) {            
            if (confirm('Are you sure you want to delete?')) {
                $.ajax({ url: '/Orders/Delete/@Model.OrderId', data: { id: id }, method: 'POST' })
                    .done(function () {
                        grid.reload();
                    })
                    .fail(function () {
                        alert('Failed to delete.');
                    });
            }
        });        

        $("#EmailBody").editor({
            uiLibrary: 'bootstrap4',
            height: 380
        });

        new ClipboardJS('.btn');

    });
</script>
}